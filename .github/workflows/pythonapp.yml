name: python

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install
        run: |
          python -m pip install --upgrade pip
          printf 'n\ny\ny\nadmin\nadmin\n' | bash ./install.sh
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Black Code Formatter
        uses: lgeiger/black-action@v1.0.1
        with:
          args: ". -t py38 --check"
      - name: Bandit Security Linter
        uses: jpetrucciani/bandit-check@master
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: "check if branch is versioned"
        run: |
          if [[ "$GITHUB_REF" =~ ([\d\.{dev}\-]{2,}) ]]; then 
          echo ::set-output name=VERSIONED::"true" && echo "branch is versioned"; else
          echo ::set-output name=VERSIONED::"false" && ehco "branch is not versioned"; fi
        shell: bash
      - name: Automatically set dev version
        if: steps.vars.outputs.VERSIONED
        run: |
          echo ::set-env name=CHERRYDOOR_VERSION::$(echo $(echo "$GITHUB_REF" | egrep -woi "([0-9\.{dev}\-]+)" && git rev-list master.. --count) | tr -d " ")
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
